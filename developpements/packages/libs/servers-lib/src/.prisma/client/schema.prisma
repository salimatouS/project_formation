generator client {
  provider        = "prisma-client-js"
  output          = "../src/.prisma/client"
  previewFeatures = ["filterJson"]
  binaryTargets   = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Partenaire {
  code    String    @id @db.VarChar
  libelle String    @db.VarChar
  clients Clients[] @relation("ref_clientsToref_partenaires")

  @@map("ref_partenaires")
}

model Produit {
  code         String  @id @db.VarChar
  libelle      String  @db.VarChar
  commentaires String? @db.VarChar(255)
  offres       Offre[] @relation("offre_produits")

  @@map("ref_produits")
}

model Offre {
  code                     String    @id @db.VarChar
  libelle                  String    @db.VarChar
  dateDerniereModification DateTime? @map("date_derniere_modification") @db.Timestamptz(0)
  codeProduit              String    @map("code_produit") @db.VarChar
  produit                  Produit   @relation("offre_produits", fields: [codeProduit], references: [code], onDelete: Cascade, onUpdate: Restrict)

  @@index([codeProduit])
  @@map("ref_offres")
}

model Clients {
  chronoClient          String      @id @map("chronoclient") @db.VarChar(15)
  prenom                String?     @db.VarChar(100)
  nom                   String?     @db.VarChar(100)
  codePostal            String?     @map("codepostal") @db.VarChar(6)
  ville                 String?     @db.VarChar(100)
  dateDerniereCommande  DateTime?   @map("datedernierecommande") @db.Date
  codeFichierPartenaire String?     @map("code_partenaire") @db.VarChar(10)
  actif                 Boolean?    @default(true)
  ref_partenaires       Partenaire? @relation("ref_clientsToref_partenaires", fields: [codeFichierPartenaire], references: [code], onDelete: NoAction, onUpdate: NoAction, map: "fk_partenaire")

  @@map("ref_clients")
}
